var posts=[{id:1,date:"2016-01-09T22:05:09",modified:"2016-01-09T22:05:09",slug:"hello-world",type:"post",title:"Hello world!",content:"Welcome to WordPress. This is your first post. Edit or delete it, then start writing!"},{id:2,date:"2016-01-10T22:05:09",modified:"2016-01-10T22:05:09",slug:"learning-javascript",type:"post",title:"Learning JavaScript!",content:"I'm learning JavaScript and super excited!!!"},{id:3,date:"2016-01-11T22:05:09",modified:"2016-01-11T22:05:09",slug:"rest-api",type:"post",title:"The REST API!",content:"I've started working with the REST API in WordPress, what fun!"},{id:4,date:"2016-01-12T22:05:09",modified:"2016-01-12T22:05:09",slug:"json-data",type:"post",title:"JSON Data!",content:"So, with the REST API it is posible to pull in WordPress data as pure JSON.  Now I'm figuring out what to do with the data"},{id:5,date:"2016-01-13T22:05:09",modified:"2016-01-13T22:05:09",slug:"javascript-project",type:"post",title:"JavaScript Project",content:"I've started working with the REST API in WordPress, what fun!"}],pages=[{id:6,date:"2016-01-18T22:05:09",modified:"2016-01-18T22:05:09",slug:"home",type:"page",title:"Home",content:"Welcome to VanillaPress, my JavaScript site!"},{id:7,date:"2016-01-18T22:05:09",modified:"2016-01-18T22:05:09",slug:"about",type:"page",title:"About",content:"A little about me!"},{id:8,date:"2016-01-18T22:05:09",modified:"2016-01-18T22:05:09",slug:"blog",type:"page",title:"Blog",content:"Please enjoy my posts"},{id:9,date:"2016-01-18T22:05:09",modified:"2016-01-18T22:05:09",slug:"contact",type:"page",title:"Contact",content:"Drop me a line with any questions :)"}],settings={editorHidden:"true"},data={posts:posts,pages:pages,settings:settings},helpers={};helpers.createMenuItem=function(e){var t=document.createElement("li");return t.appendChild(helpers.createLink(e)),t},helpers.createLink=function(e){var t=document.createElement("a"),n=document.createTextNode(e.title);return"home"!==e.slug?t.href="#"+e.slug:t.href="#",t.appendChild(n),t},helpers.getMainMenuEl=function(){return document.querySelector("#mainNav ul")},helpers.getPageTitleEl=function(){return document.getElementById("pageTitle")},helpers.getLinks=function(){return document.querySelectorAll("a")},helpers.getPageContentEl=function(){return document.getElementById("pageContent")},helpers.getEditorEl=function(){return document.getElementById("editor")},helpers.getEditorToggleEl=function(){return document.getElementById("editorToggle")},helpers.getEditorToggleLink=function(){return document.querySelector("#editorToggle a")},helpers.getEditorTitleEl=function(){return document.getElementById("editTitle")},helpers.getEditorContentEl=function(){return document.getElementById("editContent")},helpers.getEditorUpdateBtnEl=function(){return document.getElementById("editUpdateBtn")};var model={};model.init=function(){!1===model.checkLocalStore()&&model.updateLocalStore(data)},model.getContent=function(e){var t=model.getPost(e);return null===t&&(t=model.getPage(e)),null===t&&(t={title:"404 Error",content:"Content not found"}),t},model.getCurrentContent=function(){var e=router.getSlug(),t=model.getContent(e);return t},model.getPosts=function(){var e=model.getLocalStore().posts;return e},model.getPost=function(e){var t=model.getLocalStore().posts;for(i=0,max=t.length;i<max;i++)if(e===t[i].slug)return t[i];return null},model.getPages=function(){var e=model.getLocalStore().pages;return e},model.getPage=function(e){var t=model.getLocalStore().pages;for(null===e&&(e="home"),i=0,max=t.length;i<max;i++)if(e===t[i].slug)return t[i];return null},model.updateContent=function(e){var t=model.getLocalStore(),n=new Date;"post"===e.type&&t.posts.forEach(function(t){e.id===t.id&&(t.title=e.title,t.content=e.content,t.modified=n.toISOString())}),"page"===e.type&&t.pages.forEach(function(t){e.id===t.id&&(t.title=e.title,t.content=e.content,t.modified=n.toISOString())}),model.updateLocalStore(t)},model.updateEditorHidden=function(e){var t=model.getLocalStore();t.settings.editorHidden=e,model.updateLocalStore(t)},model.getEditorHidden=function(){var e=model.getLocalStore();return e.settings.editorHidden},model.checkLocalStore=function(){var e=model.getLocalStore();return null!==e},model.getLocalStore=function(){var e=JSON.parse(localStorage.getItem("vanillaPress"));return e},model.updateLocalStore=function(e){localStorage.setItem("vanillaPress",JSON.stringify(e))},model.removeLocalStore=function(){localStorage.removeItem("vanillaPress")};var router={};router.init=function(){router.loadContent(),router.listenPageChange()},router.getSlug=function(){return slug=window.location.hash,""===slug?null:slug.substr(1)},router.listenPageChange=function(){window.addEventListener("hashchange",router.loadContent,!1)},router.loadContent=function(){var e=router.getSlug(),t=model.getContent(e),n=helpers.getEditorEl();view.clearContent(),null===e?view.loadSingleContent("home"):"blog"===e?view.loadBlogPosts():view.loadSingleContent(e),editor.currentContent=t,!1===n.classList.contains("hidden")&&editor.loadEditForm(editor.currentContent)};var view={};view.init=function(){view.createMainMenu()},view.loadBlogPosts=function(){var e,t,n=model.getPosts(),o=document.createDocumentFragment(),i=helpers.getPageTitleEl(),r=helpers.getPageContentEl();for(e=0,t=n.length;e<t;e++)o.appendChild(view.createPostMarkup(n[e]));r.appendChild(o),i.innerHTML="Blog Posts"},view.loadSingleContent=function(e){var t=model.getContent(e),n=helpers.getPageTitleEl(),o=helpers.getPageContentEl();n.innerHTML=t.title,o.innerHTML=t.content},view.updateTitleAndContent=function(e){view.updateTitle(e.title),view.updateContent(e.content)},view.updateTitle=function(e){var t=helpers.getPageTitleEl();t.innerHTML=e},view.updateContent=function(e){var t=helpers.getPageContentEl();t.innerHTML=e},view.clearContent=function(){var e=helpers.getPageTitleEl(),t=helpers.getPageContentEl();e.innerHTML="",t.innerHTML=""},view.createMainMenu=function(){var e,t,n=model.getPages(),o=document.createDocumentFragment(),i=helpers.getMainMenuEl();for(e=0,t=n.length;e<t;e++)o.appendChild(helpers.createMenuItem(n[e]));i.appendChild(o)},view.createPostMarkup=function(e){var t=document.createElement("article"),n=document.createElement("h3"),o=helpers.createLink(e),i=document.createElement("div");return n.appendChild(o),i.appendChild(document.createTextNode(e.content)),t.appendChild(n),t.appendChild(i),t};var editor={};editor.currentContent="",editor.unSavedContent=!1,editor.init=function(){editor.listenEditorToggle(),editor.checkEditorHidden()},editor.updateContent=function(){event.preventDefault(),model.updateContent(editor.currentContent),editor.unSavedContent=!1,editor.animateSaveBtn()},editor.updateTitle=function(){var e=helpers.getEditorTitleEl().value;editor.currentContent.title=e,editor.unSavedContent=!0,view.updateTitle(e)},editor.updateMainContent=function(){var e=helpers.getEditorContentEl().value;editor.currentContent.content=e,editor.unSavedContent=!0,view.updateContent(e)},editor.loadEditForm=function(e){var t=helpers.getEditorTitleEl(),n=helpers.getEditorContentEl();t.value=e.title,n.value=e.content,"blog"===e.slug?n.setAttribute("readonly","readonly"):n.removeAttribute("readonly"),editor.addFormListeners()},editor.animateSaveBtn=function(){var e=helpers.getEditorUpdateBtnEl(),t=function(){setTimeout(function(){e.innerText="Update"},1e3)};saving=function(){setTimeout(function(){e.innerText="Saved!",t()},900)},e.innerText="Saving...",saving()},editor.addFormListeners=function(){var e=helpers.getEditorTitleEl(),t=helpers.getEditorContentEl(),n=helpers.getEditorUpdateBtnEl(),o=helpers.getLinks();e.addEventListener("input",editor.updateTitle,!1),t.addEventListener("input",editor.updateMainContent,!1),n.addEventListener("click",editor.updateContent,!1),o.forEach(function(e){e.addEventListener("click",editor.protectUnsavedContent,!1)})},editor.protectUnsavedContent=function(){var e;!0===editor.unSavedContent&&(e=window.confirm("You have unsaved content"),!1===e?event.preventDefault():editor.unSavedContent=!1)},editor.listenEditorToggle=function(){var e=helpers.getEditorToggleLink();e.addEventListener("click",function(){editor.toggle(),event.preventDefault()},!1)},editor.checkEditorHidden=function(){var e=model.getEditorHidden();!1===e&&editor.toggle()},editor.toggle=function(){var e=helpers.getEditorEl(),t=helpers.getEditorToggleEl(),n=helpers.getLinks();editor.currentContent=model.getCurrentContent(),e.classList.toggle("hidden"),t.classList.toggle("hidden"),!1===t.classList.contains("hidden")?(editor.loadEditForm(editor.currentContent),model.updateEditorHidden(!1)):(model.updateEditorHidden(!0),n.forEach(function(e){e.removeEventListener("click",editor.protectUnsavedContent,!1)}))};var vanillaPress={};vanillaPress.init=function(){model.init(),router.init(),view.init(),editor.init(),console.log("Testing 2")},vanillaPress.init();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
